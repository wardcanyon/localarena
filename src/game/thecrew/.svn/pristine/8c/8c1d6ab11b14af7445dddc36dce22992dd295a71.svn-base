<?php

class THCCheck
{    
    
    function __construct($thecrew )
    {
        $this->thecrew = $thecrew;
        $this->mission_finished = 0; //-1 : lost, 0: in progress, 1 : win
    }
    
    function check()
    {
        $trick_number = $this->thecrew->getGameStateValue( 'trick_count');
        $trick_winner = $this->thecrew->getGameStateValue( 'last_winner');
        
        
        $sql = "SELECT task_id, card_type, card_type_arg, token, player_id, status FROM task where status = 'tbd'";
        $tasks = $this->thecrew->getCollectionFromDb( $sql );
        
        $cards = $this->thecrew->cards->getCardsInLocation('trick'.$trick_number);
        
        //update task individually
        foreach($tasks as $task_id => $task) {
            foreach($cards as $card_id => $card)
            {
                if($task['card_type'] == $card['type'] && $task['card_type_arg'] == $card['type_arg'])
                {
                    $sql = "SELECT player_id, player_name FROM player where player_id = ".$task['player_id'];
                    $taskPlayer = $this->thecrew->getObjectFromDB( $sql );  
                    
                    $text = '';
                    if($task['player_id'] == $trick_winner)
                    {
                        $tasks[$task_id]['status'] = 'ok';
                        $text = clienttranslate('${player_name} fulfilled task ${value_symbol}${color_symbol}');
                    }
                    else
                    {
                        $tasks[$task_id]['status'] = 'nok';
                        $text = clienttranslate('${player_name} failed task ${value_symbol}${color_symbol}');
                    }
                    
                    $sql = "update task set status = '".$tasks[$task_id]['status']."' where task_id=".$task_id;
                    $this->thecrew->DbQuery( $sql );
                    
                    $this->thecrew->notifyAllPlayers('taskUpdate', $text, array(
                        'task' => $tasks[$task_id],
                        'player_id' => $taskPlayer['player_id'],
                        'player_name' => $taskPlayer['player_name'],
                        'value' => $task['card_type_arg'],
                        'value_symbol' => $task['card_type_arg'], // The substitution will be done in JS format_string_recursive function
                        'color' => $task['card_type'],
                        'color_symbol' => $task['card_type'] // The substitution will be done in JS format_string_recursive function
                    ));
                }
            }
        }
        
        //Update task according to token
        
        //update game
        if(thecrew::getUniqueValueFromDB("select count(*) from task where status <> 'ok'") == 0)
        {
            $this->thecrew->notifyAllPlayers('note', clienttranslate('Mission success'), array());
                
            //all tasks are done
            $this->thecrew->setGameStateValue( 'mission_finished', 1 );            
        }
        else if(thecrew::getUniqueValueFromDB("select count(*) from task where status = 'nok'") > 0)
        {
            $this->thecrew->notifyAllPlayers('note', clienttranslate('Mission failed'), array());
            
            //1 task has failed
            $this->thecrew->setGameStateValue( 'mission_finished', -1 );
        }
        else
        {
            //otherwise we continue
            $this->thecrew->setGameStateValue( 'mission_finished', 0 );
        }
    }
}