# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - 9000:80
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - db-password
    environment:
      - DB_PASSWORD_FILE_PATH=/run/secrets/db-password
      - DB_HOST=db
      - DB_NAME=example
      - DB_USER=root
  db:
    # N.B.: The official images are not available for arm64, but the
    # mariadb and percona images are.
    image: "mysql:5.7.44"
    platform: "linux/x86_64"
    restart: always
    user: root
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
      - MYSQL_DATABASE=example
      # - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/db-password
      # - MARIADB_DATABASE=example
    expose:
      - 3306
    # N.B.: This is for MariaDB.
    # healthcheck:
    #   test:  ["CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect",  "--innodb_initialized"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    healthcheck:
      # XXX: get this from db-password file somehow?
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-pexample-pass"]
      timeout: 20s
      retries: 10
  # phpmyadmin:
  #   image: phpmyadmin
  #   ports:
  #     - 8080:80
  #   depends_on:
  #     - db
  #   environment:
  #     - PMA_HOST=db
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt
